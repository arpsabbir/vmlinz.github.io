<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Logs from Zaicheng]]></title>
  <subtitle><![CDATA[A developing mind]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-01-02T13:48:02.004Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[Zaicheng Qi]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Hexo blog with custom domain and cloudflare]]></title>
    <link href="http://yoursite.com/2016/01/02/hexo-blog-with-custom-domain-and-cloudflare/"/>
    <id>http://yoursite.com/2016/01/02/hexo-blog-with-custom-domain-and-cloudflare/</id>
    <published>2016-01-02T21:25:39.000Z</published>
    <updated>2016-01-02T13:48:02.004Z</updated>
    <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>The <a href="https://zaicheng.me/2015/12/31/setup-a-blog-with-hexojs-and-travis/" target="_blank" rel="external">previous blog</a> shows you how to setup a blog with hexo and github pages. Here we are going to make it further.</p>
<ul>
<li>Setup custom domain name for your blog</li>
<li>Setup cloudflare for content caching and https support</li>
<li>Setup apex domain name and a <code>www</code> sub domain</li>
<li>Setup cloudflare dns records with flattening CNAME record</li>
<li>Configure cloudflare<ul>
<li>ipv6</li>
<li>hsts</li>
<li>flexible/full ssl</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h1 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h1><h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><ul>
<li>Your deployed github pages. I setup my page at <em>vmlinz.github.io</em> with instructions from my previous blog post.</li>
<li>Your custom domain name from a domain name vendor. I bought a domain name from name.com: <em>zaicheng.me</em>.</li>
<li>A cloudflare account, free or paid. I created an account for cloudflare.</li>
</ul>
<h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul>
<li>Use my custom apex domain name <em>zaicheng.me</em> to point to my github blog.</li>
<li>Redirect <em>www.zaicheng.me</em> to <em>zaicheng.me</em></li>
<li>Redirect <em>vmlinz.github.io</em> to <em>zaicheng.me</em></li>
<li>Use cloudflare to cache contents from <em>zaicheng.me</em> using the tricks of cloudflare</li>
<li>Turn on hsts to make sure any insecure link will be redirected to the ssl secured one</li>
</ul>
<h2 id="Instructions"><a href="#Instructions" class="headerlink" title="Instructions"></a>Instructions</h2><h3 id="Setup_github_pages_CNAME_record"><a href="#Setup_github_pages_CNAME_record" class="headerlink" title="Setup github pages CNAME record"></a>Setup github pages CNAME record</h3><ul>
<li>new a file named CNAME under hexo source dir, and put <em>zaicheng.me</em> into it. Then if you have both dns record of <em>zaicheng.me</em> and <em>www.zaicheng.me</em>, github will redirect <em>www.zaicheng.me</em> to <em>zaicheng.me</em></li>
</ul>
<h3 id="Add_dns_records_to_the_name-com_dns_records"><a href="#Add_dns_records_to_the_name-com_dns_records" class="headerlink" title="Add dns records to the name.com dns records"></a>Add dns records to the name.com dns records</h3><ul>
<li>add a CNAME record of <code>zaicheng.me, vmlinz.github.io</code>, NOTE: this is not an effective CNAME record by the dns spec, but cloudflare recognize it.</li>
</ul>
<h3 id="Set_up_cloudflare"><a href="#Set_up_cloudflare" class="headerlink" title="Set up cloudflare"></a>Set up cloudflare</h3><p>Let’s set up cloudflare to cache the content and turn on hsts for the site.</p>
<ul>
<li>Follow the guide to scan the original dns records.</li>
<li>Migrate the dns servers from the domain name register panel to the cloudflare ones to get it work.</li>
<li>Set up dns to add a record of flattening CNAME, which means to point <em>zaicheng.me</em> to <em>vmlinz.github.io</em>. NOTE: this is a cloudflare specific dns function which breaks the limits of dns spec.</li>
<li>Setup the crypto to turn on full ssl</li>
<li>Turn on HSTS under crypto, turn on <code>include subdomains</code> and <code>No-sniff</code></li>
<li>Turn on ipv6 compatibility</li>
</ul>
<h3 id="NOTE"><a href="#NOTE" class="headerlink" title="NOTE"></a>NOTE</h3><ul>
<li>cloudflare will provision your ssl cert after about 24 hours</li>
<li>flattening CNAME for apex domain is not supported by all the dns servers</li>
<li>full ssl will only work when I use flattening CNAME, if I add a dns A record of <code>zaicheng.me</code> pointing to the github ips(192.30.252.153,192.30.252.154), then I cannot use full ssl.</li>
</ul>
<h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ul>
<li><a href="https://help.github.com/articles/tips-for-configuring-a-cname-record-with-your-dns-provider/" target="_blank" rel="external">configure a cname record with your dns provider</a></li>
<li><a href="https://www.benburwell.com/posts/configuring-cloudflare-universal-ssl/" target="_blank" rel="external">configuring cloudflare universal ssl</a></li>
<li><a href="https://help.github.com/articles/about-custom-domains-for-github-pages-sites/" target="_blank" rel="external">custom domains for github pages</a></li>
<li><a href="https://stirling.co/blog/github-pages-jekyll-cloudflare/" target="_blank" rel="external">github pages jekyll cloudflare</a></li>
<li><a href="http://blog.differential.com/free-ssl-hosting" target="_blank" rel="external">free ssl hosting</a></li>
<li><a href="https://devcenter.heroku.com/articles/apex-domains" target="_blank" rel="external">apex domains</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>The <a href="https://zaicheng.me/2015/12/31/setup-a-blog-with-hexojs-and-travis/">previous blog</a> shows you how to setup a blog with hexo and github pages. Here we are going to make it further.</p>
<ul>
<li>Setup custom domain name for your blog</li>
<li>Setup cloudflare for content caching and https support</li>
<li>Setup apex domain name and a <code>www</code> sub domain</li>
<li>Setup cloudflare dns records with flattening CNAME record</li>
<li>Configure cloudflare<ul>
<li>ipv6</li>
<li>hsts</li>
<li>flexible/full ssl</li>
</ul>
</li>
</ul>]]>
    
    </summary>
    
      <category term="cloudflare" scheme="http://yoursite.com/tags/cloudflare/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="ssl" scheme="http://yoursite.com/tags/ssl/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Setup a blog with hexojs and travis]]></title>
    <link href="http://yoursite.com/2015/12/31/setup-a-blog-with-hexojs-and-travis/"/>
    <id>http://yoursite.com/2015/12/31/setup-a-blog-with-hexojs-and-travis/</id>
    <published>2015-12-31T23:46:12.000Z</published>
    <updated>2016-01-02T13:48:02.004Z</updated>
    <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><ul>
<li>Hexo is a fast and powerful site generator designed specifically for personal blogging. There is a lot of plugins to make it even powerful.</li>
<li>With the power of travis, you can automate the site generating progress and separate the process of editing from publishing.</li>
<li>You can deploy your generated site to github pages, a free and easy-to-use page hosting service.</li>
</ul>
<p>This article is going to instruct you to setup a blog with these handy tools.</p>
<a id="more"></a>
<h1 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h1><h2 id="Install_hexojs"><a href="#Install_hexojs" class="headerlink" title="Install hexojs"></a>Install hexojs</h2><h3 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h3><ul>
<li><a href="https://git-scm.com/downloads" target="_blank" rel="external">git</a></li>
<li><a href="https://nodejs.org/en/download/package-manager" target="_blank" rel="external">nodejs</a></li>
</ul>
<h3 id="Install_from_npm"><a href="#Install_from_npm" class="headerlink" title="Install from npm"></a>Install from npm</h3><p>  npm install -g hexo-cli</p>
<h3 id="Basic_setup"><a href="#Basic_setup" class="headerlink" title="Basic setup"></a>Basic setup</h3><p>Once you have hexo installed, you can use following commands to initialize the target folder</p>
<p>  hexo init BLOG_DIR<br>  cd BLOG_DIR<br>  npm install</p>
<h3 id="Customization"><a href="#Customization" class="headerlink" title="Customization"></a>Customization</h3><ul>
<li><a href="https://hexo.io/docs/configuration.html" target="_blank" rel="external">configuration</a></li>
<li><a href="https://hexo.io/docs/writing.html#Scaffolds" target="_blank" rel="external">scaffolds</a></li>
<li><a href="https://hexo.io/docs/themes.html" target="_blank" rel="external">themes</a><ul>
<li><a href="https://github.com/pinggod/hexo-theme-apollo" target="_blank" rel="external">appolo</a></li>
<li><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">next</a></li>
</ul>
</li>
</ul>
<h3 id="Writing"><a href="#Writing" class="headerlink" title="Writing"></a>Writing</h3><ul>
<li>new post, hexo new [layout] TITLE</li>
<li>publish a draft, hexo publish [layout] TITLE</li>
</ul>
<h2 id="Deploy_hexojs_to_github_and_gitcafe"><a href="#Deploy_hexojs_to_github_and_gitcafe" class="headerlink" title="Deploy hexojs to github and gitcafe"></a>Deploy hexojs to github and gitcafe</h2><h3 id="Document"><a href="#Document" class="headerlink" title="Document"></a>Document</h3><p><a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">deployment</a></p>
<p>with these commands, you can deploy the web site to the server configured.</p>
<p>  hexo deploy</p>
<h3 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h3><ul>
<li><a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="external">hexo-deployer-git</a></li>
<li><a href="https://github.com/hexojs/hexo-deployer-heroku" target="_blank" rel="external">hexo-deployer-heroku</a></li>
<li><a href="https://github.com/hexojs/hexo-deployer-rsync" target="_blank" rel="external">hexo-deployer-rsync</a></li>
<li>others</li>
</ul>
<h2 id="Deploy_hexojs_auto_builder_with_travis_ci"><a href="#Deploy_hexojs_auto_builder_with_travis_ci" class="headerlink" title="Deploy hexojs auto builder with travis ci"></a>Deploy hexojs auto builder with travis ci</h2><ul>
<li><a href="https://github.com/hexojs/site" target="_blank" rel="external">https://github.com/hexojs/site</a></li>
<li><a href="https://xuanwo.org/2015/02/07/Travis-CI-Hexo-Autodeploy/" target="_blank" rel="external">https://xuanwo.org/2015/02/07/Travis-CI-Hexo-Autodeploy/</a></li>
</ul>
<h2 id="Configure_github_pages_with_custom_domain_name"><a href="#Configure_github_pages_with_custom_domain_name" class="headerlink" title="Configure github pages with custom domain name"></a>Configure github pages with custom domain name</h2><p><a href="https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/" target="_blank" rel="external">https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/</a></p>
<h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ul>
<li><a href="https://hexo.io/docs/" target="_blank" rel="external">official documentation</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><ul>
<li>Hexo is a fast and powerful site generator designed specifically for personal blogging. There is a lot of plugins to make it even powerful.</li>
<li>With the power of travis, you can automate the site generating progress and separate the process of editing from publishing.</li>
<li>You can deploy your generated site to github pages, a free and easy-to-use page hosting service.</li>
</ul>
<p>This article is going to instruct you to setup a blog with these handy tools.</p>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="pages" scheme="http://yoursite.com/tags/pages/"/>
    
      <category term="travis" scheme="http://yoursite.com/tags/travis/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Rails active record associations]]></title>
    <link href="http://yoursite.com/2015/12/24/Rails-active-record-associations/"/>
    <id>http://yoursite.com/2015/12/24/Rails-active-record-associations/</id>
    <published>2015-12-24T23:48:24.000Z</published>
    <updated>2016-01-02T13:48:02.004Z</updated>
    <content type="html"><![CDATA[<p>最近在学习”APIs on Rails”这本书，这是学习第八章”Placing Orders”的学习笔记。</p>
<h2 id="u5185_u5BB9"><a href="#u5185_u5BB9" class="headerlink" title="内容"></a>内容</h2><ul>
<li>理解Rails中的模型关联(Model Association)</li>
<li>知道模型关联的基本知识和几种常见模式</li>
<li>使用joint table来建立多对多的模型</li>
</ul>
<a id="more"></a>
<h3 id="Rails_Model_Associations"><a href="#Rails_Model_Associations" class="headerlink" title="Rails Model Associations"></a>Rails Model Associations</h3><p>通过railscasts和rails guide学习模型关联</p>
<h4 id="u4E3A_u4EC0_u4E48_u9700_u8981_u6A21_u578B_u5173_u8054"><a href="#u4E3A_u4EC0_u4E48_u9700_u8981_u6A21_u578B_u5173_u8054" class="headerlink" title="为什么需要模型关联"></a>为什么需要模型关联</h4><p>通过模型关联，rails可以在model层产生一些有用的函数，帮助开发者描述问题。</p>
<h4 id="u5173_u8054_u7684_u7C7B_u578B"><a href="#u5173_u8054_u7684_u7C7B_u578B" class="headerlink" title="关联的类型"></a>关联的类型</h4><p>Rails里面关联是两个Model的连接。关联的实现是通过在相关Model里面调用一些宏函数，这些宏函数会自动实现相关的功能。</p>
<p>NOTE: 在下面解释中，源是指调用关系函数的一方，目标是指作为关系函数参数的一方</p>
<h5 id="belongs_to"><a href="#belongs_to" class="headerlink" title="belongs_to"></a>belongs_to</h5><p>这个关系是用来描述一对一的从属关系，在migration里面的体现是在源表里面增加外键来指向目标表</p>
<p><img src="/images/belongs_to.png" alt="belongs_to"></p>
<pre><code>migration:
class CreateOrders &lt; ActiveRecord::Migration
  def change
    create_table :customers do |t|
      t.string :name
      t.timestamps null: false
    end

    create_table :orders do |t|
      t.belongs_to :customer, index: true
      t.datetime :order_date
      t.timestamps null: false
    end
  end
end
</code></pre><h5 id="has_one"><a href="#has_one" class="headerlink" title="has_one"></a>has_one</h5><p>这个描述的也是一种一对一的关系，简单来说就是用不同的视角描述和<code>belongs_to</code>相同的关系，会在目标表里面增加一项外键引用到源表。</p>
<p><img src="/images/has_one.png" alt="has_one"></p>
<pre><code>migration:
class CreateSuppliers &lt; ActiveRecord::Migration
  def change
    create_table :suppliers do |t|
      t.string :name
      t.timestamps null: false
    end

    create_table :accounts do |t|
      t.belongs_to :supplier, index: true
      t.string :account_number
      t.timestamps null: false
    end
  end
end
</code></pre><h5 id="has_many"><a href="#has_many" class="headerlink" title="has_many"></a>has_many</h5><p>这种描述的是一对多的关系，有多个目标对象和源对象关联</p>
<p><img src="/images/has_many.png" alt="has_many"></p>
<pre><code>migration:
class CreateCustomers &lt; ActiveRecord::Migration
  def change
    create_table :customers do |t|
      t.string :name
      t.timestamps null: false
    end

    create_table :orders do |t|
      t.belongs_to :customer, index:true
      t.datetime :order_date
      t.timestamps null: false
    end
  end
end
</code></pre><h5 id="has_many__3Athrough"><a href="#has_many__3Athrough" class="headerlink" title="has_many :through"></a>has_many :through</h5><p>这种描述的是多对多的关系，有多个目标对象和多个源对象关联，但关系的建立是通过一个中间表来完成</p>
<p><img src="/images/has_many_through.png" alt="has_many :through"></p>
<pre><code>migration:
class CreateAppointments &lt; ActiveRecord::Migration
  def change
    create_table :physicians do |t|
      t.string :name
      t.timestamps null: false
    end

    create_table :patients do |t|
      t.string :name
      t.timestamps null: false
    end

    create_table :appointments do |t|
      t.belongs_to :physician, index: true
      t.belongs_to :patient, index: true
      t.datetime :appointment_date
      t.timestamps null: false
    end
  end
end
</code></pre><h5 id="has_one__3Athrough"><a href="#has_one__3Athrough" class="headerlink" title="has_one :through"></a>has_one :through</h5><p>这个用来描述一对一的关系，通过中间表讲第一方和第三方关联起来</p>
<p><img src="/images/has_one_through.png" alt="has_one :through"></p>
<pre><code>migration:
class CreateAccountHistories &lt; ActiveRecord::Migration
  def change
    create_table :suppliers do |t|
      t.string :name
      t.timestamps null: false
    end

    create_table :accounts do |t|
      t.belongs_to :supplier, index: true
      t.string :account_number
      t.timestamps null: false
    end

    create_table :account_histories do |t|
      t.belongs_to :account, index: true
      t.integer :credit_rating
      t.timestamps null: false
    end
  end
end
</code></pre><h5 id="has_and_belongs_to_many"><a href="#has_and_belongs_to_many" class="headerlink" title="has_and_belongs_to_many"></a>has_and_belongs_to_many</h5><p>这个和<code>has_many :through</code>描述的是一样的多对多关系，不过在代码中看不到中间表的存在</p>
<p>NOTE: 可以从migration中看到，实际上有一个自动生成的中间表存在</p>
<p><img src="/images/habtm.png" alt="has\_and\_belongs\_to\_many"></p>
<pre><code>migration:
class CreateAssembliesAndParts &lt; ActiveRecord::Migration
  def change
    create_table :assemblies do |t|
      t.string :name
      t.timestamps null: false
    end

    create_table :parts do |t|
      t.string :part_number
      t.timestamps null: false
    end

    create_table :assemblies_parts, id: false do |t|
      t.belongs_to :assembly, index: true
      t.belongs_to :part, index: true
    end
  end
end
</code></pre><h2 id="u53C2_u8003"><a href="#u53C2_u8003" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="http://railscasts.com/episodes/3-find-through-association" target="_blank" rel="external">http://railscasts.com/episodes/3-find-through-association</a></li>
<li><a href="http://guides.rubyonrails.org/association_basics.html" target="_blank" rel="external">http://guides.rubyonrails.org/association_basics.html</a></li>
<li><a href="http://railscasts.com/episodes/47-two-many-to-many" target="_blank" rel="external">http://railscasts.com/episodes/47-two-many-to-many</a></li>
<li><a href="http://railscasts.com/episodes/154-polymorphic-association" target="_blank" rel="external">http://railscasts.com/episodes/154-polymorphic-association</a></li>
<li><a href="https://viget.com/extend/exploring-the-inverse-of-option-on-rails-model-associations" target="_blank" rel="external">understand the inverse_of for active model</a></li>
<li><a href="http://apionrails.icalialabs.com/" target="_blank" rel="external">APIs on Rails</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近在学习”APIs on Rails”这本书，这是学习第八章”Placing Orders”的学习笔记。</p>
<h2 id="u5185_u5BB9"><a href="#u5185_u5BB9" class="headerlink" title="内容"></a>内容</h2><ul>
<li>理解Rails中的模型关联(Model Association)</li>
<li>知道模型关联的基本知识和几种常见模式</li>
<li>使用joint table来建立多对多的模型</li>
</ul>]]>
    
    </summary>
    
      <category term="active model" scheme="http://yoursite.com/tags/active-model/"/>
    
      <category term="rails" scheme="http://yoursite.com/tags/rails/"/>
    
      <category term="ruby" scheme="http://yoursite.com/tags/ruby/"/>
    
  </entry>
  
</feed>
